services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '8081:80'

  backend:
    build:
      context: ./server
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/postgres
      - ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3500,http://localhost:8082,http://localhost:8080
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8082
      - KEYCLOAK_REALM=referentiel-applications
      - KEYCLOAK_CLIENT_ID=referentiel-applications
      - KEYCLOAK_CLIENT_SECRET=xrSK3UlEQcHhqmUXyhlKMKg0fEQPfQBI
    depends_on:
      - postgres
    ports:
      - '3500:3500'
    volumes:
      - ./server:/app

  keycloak:
    build:
      context: ./keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - 8082:8080
    healthcheck:
      test: "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      - postgres

  client:
    image: node:22
    working_dir: /app
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - '5173:5173'
    command: sh -c "npm install -g pnpm && pnpm install && pnpm dev"
    depends_on:
      - backend

volumes:
  postgres_data:
